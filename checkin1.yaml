
swagger: '2.0'
info:
  title: Checkin API
  description: Simple Checkin API example
  version: "1.0.0"
host: api.usergrid.com
schemes:
  - https
basePath: /snoopdave/checkin1
produces:
  - application/jsona

paths:

  /token:
    post:
      summary: Authenticate via username and password
      description: |
        Post LoginData to this end-point to authenticate
      consumes: [application/json]
      responses:
        201:
          description: Login succeeded
          schema:
            $ref: '#/definitions/LoginResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /users:
    get:
      summary: Users
      description: |
        Returns a collection of users, which can be filtered by a query specified in Usergrid Query Syntax.
      parameters:
        - name: access_token
          type: string
          in: query
          description: Access token (if not specified in HTTP headers).
          required: false
        - name: ql
          type: string
          in: query
          description: Optional query specified in Usergrid query syntax.
          required: false
      tags:
        - User Management
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/UserResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /users/{userId}:
    get:
      summary: User
      description: |
        Returns a single User entity.
      parameters:
        - name: userId
          type: string
          in: path
          description: User ID is UUID in string form
          required: true
        - name: access_token
          type: string
          in: query
          description: Access token (if not specified in HTTP headers).
          required: false
        - name: ql
          type: string
          in: query
          description: Optional query specified in Usergrid query syntax.
          required: false
      tags:
        - User Management
      responses:
        200:
          description: A single User entity.
          schema:
            type: array
            items:
              $ref: '#/definitions/UserResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /users:
    get:
      summary: Users
      description: |
        Returns a collection of users, which can be filtered by a query specified in Usergrid Query Syntax.
      parameters:
        - name: access_token
          type: string
          in: query
          description: Access token (if not specified in HTTP headers).
          required: false
        - name: ql
          type: string
          in: query
          description: Optional query specified in Usergrid query syntax.
          required: false
      tags:
        - User Management
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/UserResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:

  LoginInfo:
    description: Data required to obtain and access_token.
    properties:
      username:
        type: string
      password:
        type: string
      grant_type:
        type: string
        
  LoginResponse:
    properties:
      access_token:
        type: string
      
  User:
    properties:
      uuid: 
        type: string
        description: Uniquely indentifies the entity.
      type:
        type: string
        description: Type of the entity (user).
      username:
        type: string
        description: Type of the entity (user).
        
  UserResponse:
    properties:
      action:
        type: string
        description: HTTP method that was executed    
      uri:
        type: string
        description: URI of this resource.
      status:
        type: string
        description: HTTP status description.
      count:
        type: string
        description: Number of Users returned.
      entities:
        type: array
        items: 
          $ref: '#/definitions/User'
         
  Activity:
    properties:
      uuid: 
        type: string
        description: Uniquely indentifies the entity.
      type:
        type: string
        description: Type of the entity (activity).
        
  ActivityResponse:
    properties:
      action:
        type: string
        description: HTTP method that was executed    
      uri:
        type: string
        description: URI of this resource.
      status:
        type: string
        description: HTTP status description.
      count:
        type: number
        description: Number of entities returned.
      entities:
        type: array
        items: 
          $ref: '#/definitions/Activity'

  Error:
    properties:
      error: 
        type: string
        description: Short description of error.
      exception:
        type: string
        description: Exception type.
      error_description:
        type: string
        description: Description of error.
        
